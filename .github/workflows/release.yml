name: Lib Release (LIN/WIN)

on:
  push:
    tags:
      - '*-release'
      - '*-distribution'
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: make structure
      run: make structure OS=LIN
    - name: download gmock
      run: |
        mkdir -p ./gmock/
        curl https://codeload.github.com/google/googletest/zip/refs/tags/release-1.10.0 -o ./gmock/googletest-release-1.10.0.zip
        unzip ./gmock/googletest-release-1.10.0.zip -d ./gmock
        ls
    - name: install gmock
      run: |
        make install_gtest GTEST_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googletest OS=LIN
        make install_gmock GMOCK_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googlemock GTEST_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googletest OS=LIN
    - name:  run tests 
      run : |
        make check TEST_SUITE=GMOCK GMOCK_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googlemock GTEST_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googletest OS=LIN
    - name: archive
      run : |
        sudo apt-get install doxygen -y
        make distribution OS=LIN DOXYGEN=doxygen
        zip -r muapp-${{ github.ref }}-linux.zip include/ doc/ lib/libmuapp.a
    - name: upload archive artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist-archive-linux
        path: muapp-${{ github.ref }}-linux.zip
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: make structure
      run: make structure OS=WIN
    - name: download gmock
      run: |
        mkdir -p ./gmock/
        curl https://codeload.github.com/google/googletest/zip/refs/tags/release-1.10.0 -o ./gmock/googletest-release-1.10.0.zip
        unzip ./gmock/googletest-release-1.10.0.zip -d ./gmock
        ls
    - name: install gmock
      run: |
        make install_gtest GTEST_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googletest OS=WIN
        make install_gmock GMOCK_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googlemock GTEST_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googletest OS=WIN
    - name:  run tests 
      run : |
        make check TEST_SUITE=GMOCK GMOCK_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googlemock GTEST_ROOT=${{ github.workspace }}/gmock/googletest-release-1.10.0/googletest OS=WIN
    - name: doxygen  
      uses: mattnotmitt/doxygen-action@v1
      with:
        enable-latex: true
    - name: archive
      run: |
        ar -rs out/*.o
        zip -r muapp-${{ github.ref }}-windows.zip include/ doc/ lib/libmuapp.a
    - name: upload archive artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist-archive-windows
        path: muapp-${{ github.ref }}-windows.zip
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: download windows
      uses: actions/download-artifact@v2
      with:
        name: dist-archive-windows
    - name: download linux
      uses: actions/download-artifact@v2
      with:
        name: dist-archive-linux
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: muapp-${{ github.ref }}
        tag_name: ${{ github.ref }}
        body_path: README.md
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./muapp-${{ github.ref }}-linux.zip
        asset_name: muapp-${{ github.ref }}-linux.zip
        asset_content_type: application/zip
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./muapp-${{ github.ref }}-windows.zip
        asset_name: muapp-${{ github.ref }}-windows.zip
        asset_content_type: application/zip
